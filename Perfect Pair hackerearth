url: https://www.hackerearth.com/practice/data-structures/hash-tables/basics-of-hash-tables/practice-problems/algorithm/perfect-pair-df920e90/

Problem
Rajiv and Nitish had a fight because Rajiv was annoying Nitish with his question. Rajiv being a genius in arrays gave Nitish an array of natural numbers A of length N with elements A1,  A2, . . ., AN. Nitish has to find the total amount of perfect pairs in the array.
  
A perfect pair (Ai, Aj) is a pair where (Ai + Aj) is a perfect square or a perfect cube and i ≠ j. 
  
Since Rajiv and Nitish are not talking with each other after the fight you have been given the question to solve and inturn make both of them a perfect pair again.
  
NOTE :-  A pair (Ai, Aj) and (Aj, Ai) are same and not to be counted twice.

 

Input

The first line on the input contains the a single integer T denoting the number of test cases. The first line of each test case contains a single integer N. The second line contains N space-separated integers A1,  A2, . . ., AN.

Output

For each test case, print a single line containing a single integer denoting the total number of perfect pairs.

Constraints

1 ≤  T ≤ 10
1 ≤  N ≤ 105
1 ≤  Ai ≤ 103

Sample Input
2
5
1 2 3 4 5
4
1 4 5 8
Sample Output
3
2
Time Limit: 1
Memory Limit: 256
Source Limit:
Explanation
In first testcase pairs (1, 3), (3, 5) and (4,5) give values 4, 8, 9 and form perfect pairs.

In the second testcase pairs (1, 8), (4, 5) give values 9, 9 and form perfect pairs.

//Editorial solution//
#include<bits/stdc++.h>
#define ll long long
#define vll vector<ll>
#define llin(a) ll a; cin>>a;
#define llin2(a,b) ll a,b; cin>>a>>b;
#define llin3(a,b,c) ll a,b,c; cin>>a>>b>>c;
#define fulll(v) v.begin(),v.end()
#define vecin(n, v) for(ll i=0; i<n;i++) cin>>v[i];
#define vecout(n, v) for(ll i=0; i<n;i++) cout<<v[i]<<" "; cout<<endl;
#define rep(i, s, n) for(ll i=s;i<n;i++)
#define endl "\n"
#define test cout<<"test line"<<endl;
#define swapper void swap(ll *a, ll *b){ll t=*a;*a=*b;*b=t;}
#define pll pair<ll,ll>
#define vpll vector<pll >
#define mod 1000000007
using namespace std;



int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    bool sq[2001]={false};
    rep(i,1,sqrt(2001))
    {
        if(i*i<=2001)
            sq[i*i]=true;
        if(i*i*i<=2001)
            sq[i*i*i]=true;
    }

    llin(t);
    while(t--)
    {
        llin(n);
        vll v;
        unordered_map<ll,ll > ump;
        rep(i,0,n)
        {
            llin(a);
            ump[a]++;
        }
        for(auto i:ump)
            v.push_back(i.first);
        n=v.size();
        ll c=0;
        rep(i,0,n)
        {
            ll f=ump[v[i]];
            if(f>1&&sq[2*v[i]])
                c+=(f*(f-1))/2;
            for (ll j=i+1; j<n; j++)
            {
                if (sq[v[i]+v[j]])
                    c+=(f*ump[v[j]]);
            }
        }
        cout<<c<<endl;
    }

    return 0;
}

/////////////// My solution ///////////////
#include<bits/stdc++.h>
using namespace std  ;
bool init[2020];
int main(){
    int t;
    cin>>t;
    for(int i=2 ; i*i<2000 ; i++ ){
        if(i*i<=2000){
            init[i*i] = 1 ;
        }
        if(i*i*i<=2000){
            init[i*i*i] = 1 ; 
        }
    }

    while(t--){
        int n;
        cin>>n;
        unordered_map<int,int> m;
        vector<int> v;
        m.clear();
        v.clear();
        for(int i=0 ; i<n ; i++){
            int x;
            cin>>x;
                m[x]++;
        }
        for(auto it=m.begin() ; it!=m.end() ; it++){
            v.push_back(it->first);
        }
        int ans = 0 ;
        for(int a=0 ; a<v.size() ; a++){
            int value = m[v[a]];
            if(value>1 && init[2*v[a]]==1){
                ans += (value*(value-1))/2;
            }
            for(int b=a+1 ; b<v.size() ; b++){
                if(init[v[a]+v[b]]==1){
                    ans += value * m[v[b]];
                }
            }
        }
        cout<<ans<<endl;
    }
}
///////////////////////////// 000000000 //////////////////////////////////////////
